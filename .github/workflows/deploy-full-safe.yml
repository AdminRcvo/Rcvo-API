name: Rcvo – Déploiement en toute sécurité (projet racine)

on:
  push:
    branches:
      - main
      - principal

env:
  AWS_REGION: eu-west-3
  APP_NAME: rcvo-backend
  STAGING_ENV: Rcvo-Backend-staging
  PROD_ENV: Rcvo-Backend-prod
  BASE_SCHEME: http  # HTTPS sera activé plus tard après config SSL

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: construire
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Installer Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Installer dépendances
        run: npm ci

      - name: Construire projet
        run: npm run build --if-present

  deploy-staging:
    name: déploiement-staging
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Auth AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::409818814260:role/RcvoGithubDeployRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Attendre que STAGING soit prêt (pré-update)
        run: |
          for i in {1..30}; do
            STATUS=$(aws elasticbeanstalk describe-environments \
              --environment-names "${{ env.STAGING_ENV }}" \
              --query 'Environments[0].Status' --output text)
            if [ "$STATUS" = "Ready" ]; then
              echo "✅ STAGING prêt"
              exit 0
            fi
            echo "⏳ Attente que STAGING soit prêt…"
            sleep 10
          done
          echo "❌ STAGING pas prêt après 5 min"
          exit 1

      - name: Créer version EB (idempotent)
        run: |
          ZIP="build-$(date +%s).zip"
          aws s3 cp "$ZIP" "s3://rcvo-officiel/$ZIP" || echo "Pas de ZIP, build local ignoré"
          aws elasticbeanstalk create-application-version \
            --application-name "${{ env.APP_NAME }}" \
            --version-label "$ZIP" \
            --source-bundle S3Bucket="rcvo-officiel",S3Key="$ZIP" \
            || echo "⚠️ Version déjà existante"

      - name: Pousser variables d'env (STAGING)
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "${{ env.STAGING_ENV }}" \
            --option-settings Namespace=aws:elasticbeanstalk:application:environment,OptionName=PORT,Value=8080

      - name: Déployer version sur STAGING
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "${{ env.STAGING_ENV }}" \
            --version-label "$(aws elasticbeanstalk describe-environments \
              --environment-names "${{ env.STAGING_ENV }}" \
              --query 'Environments[0].VersionLabel' --output text)"

      - name: Attendre GREEN (STAGE)
        run: |
          for i in {1..30}; do
            HEALTH=$(aws elasticbeanstalk describe-environments \
              --environment-names "${{ env.STAGING_ENV }}" \
              --query 'Environments[0].Health' --output text)
            if [ "$HEALTH" = "Green" ]; then
              echo "✅ Santé GREEN"
              exit 0
            fi
            echo "⏳ Attente santé GREEN…"
            sleep 10
          done
          exit 1

      - name: Essais de fumée (STAGING)
        run: |
          URL="${{ env.BASE_SCHEME }}://$(aws elasticbeanstalk describe-environments \
            --environment-names "${{ env.STAGING_ENV }}" \
            --query 'Environments[0].CNAME' --output text)"
          echo "Test sur $URL/health"
          curl -I "$URL/health" || exit 1

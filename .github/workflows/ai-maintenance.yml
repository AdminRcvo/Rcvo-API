# Ce workflow doit être placé dans le repo contenant ton API (par ex. AdminRcvo/API) sous `.github/workflows/ai-maintenance.yml`
# Avant d’exécuter : vérifie que le secret OPENAI_API_KEY est bien configuré dans le repo rcvo-API (Settings > Secrets)
name: AI Code Maintenance

on:
  workflow_dispatch:
    inputs:
      change_request:
        description: 'Décris la modification à appliquer'
        required: true

jobs:
  apply_ai_patch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install OpenAI CLI
        run: npm install -g openai

      - name: Generate patch with OpenAI (using curl & jq)
        run: |
          # Installer jq pour parser la réponse
          sudo apt-get update && sudo apt-get install -y jq
          # Appel direct à l'API OpenAI avec curl
          curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{"model":"gpt-4","messages":[{"role":"user","content":"Agis comme un développeur : ${{ github.event.inputs.change_request }}, fournis-moi un patch git (diff) à appliquer sur ce repo."}],"stream":false}' \
            > patch_response.json
          # Extraire le contenu du patch
          jq -r '.choices[0].message.content' patch_response.json > patch.diff

      - name: Apply patch & commit
          head: ai-update

name: Déployer le backend Rcvo (API) sur Elastic Beanstalk

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-3
  EB_APP_NAME: Rcvo-backend
  EB_ENV_NAME: rcvo-backend-b       # PROD (ne rien changer)
  HEALTH_PATH: /health

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configurer AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install & Build (auto)
        run: |
          set -e
          if [ -f pnpm-lock.yaml ]; then npm i -g pnpm && pnpm i --frozen-lockfile && (pnpm run build || true)
          elif [ -f yarn.lock ]; then corepack enable && yarn install --frozen-lockfile && (yarn build || true)
          elif [ -f package-lock.json ]; then npm ci && (npm run build || true)
          else npm i && (npm run build || true); fi

      - name: Créer bundle/api.zip
        run: |
          set -e
          LABEL="api-$(date +%Y%m%d-%H%M%S)-${GITHUB_RUN_NUMBER}"
          echo "LABEL=$LABEL" >> $GITHUB_ENV
          mkdir -p bundle
          zip -qr bundle/api.zip .

      - name: Upload S3 + créer version EB
        run: |
          set -e
          ACC=$(aws sts get-caller-identity --query Account --output text)
          DSTB="elasticbeanstalk-${AWS_REGION}-${ACC}"
          KEY="${EB_APP_NAME}/${LABEL}.zip"
          aws s3 cp bundle/api.zip "s3://${DSTB}/${KEY}"
          aws elasticbeanstalk create-application-version \
            --application-name "$EB_APP_NAME" \
            --version-label "$LABEL" \
            --source-bundle S3Bucket="$DSTB",S3Key="$KEY" \
            --process

      - name: Déployer sur Elastic Beanstalk
        run: |
          set -e
          aws elasticbeanstalk update-environment \
            --environment-name "$EB_ENV_NAME" \
            --version-label "$LABEL"

      - name: Attendre Ready/Green + /health
        run: |
          set -e
          for i in {1..60}; do
            read -r ST HL VER CNAME <<<"$(aws elasticbeanstalk describe-environments \
              --environment-names "$EB_ENV_NAME" \
              --query 'Environments[0].[Status,Health,VersionLabel,CNAME]' --output text)"
            echo "  - $ST / $HL (ver=$VER) $CNAME"
            [ "$ST" = "Ready" ] && [ "$HL" = "Green" ] && break
            sleep 10
          done
          URL="http://${CNAME}${HEALTH_PATH}"
          code=$(curl -sk -o /dev/null -w "%{http_code}" "$URL")
          echo "Health $URL -> $code"
          [ "$code" = "200" ]
